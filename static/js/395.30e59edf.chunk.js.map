{"version":3,"file":"static/js/395.30e59edf.chunk.js","mappings":"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","sources":["webpack://movie-search-app/./src/components/TrendsList/TrendList.module.scss?a439","components/TrendCard/TrendCard.js","components/TrendsList/TrendsList.js","webpack://movie-search-app/./src/Pages/TrendsPage/TrandsPage.module.scss?0296","Pages/TrendsPage/TrendsPage.js","webpack://movie-search-app/./src/components/BackButton/BackButton.module.scss?ddd2","components/BackButton/BackButton.js","services/api.js","redux/movies-operations.js","redux/movies-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"TerndsListItem\":\"TrendList_TerndsListItem__bdEPf\"};","import React from \"react\";\n// import styles from './TrendCard.module.scss'\nimport PropTypes from 'prop-types';\n\nconst TrendCard = ({ title, url, overview, release_date, vote_average }) => {\n    function rating() {\n        return vote_average.toFixed(1)\n    }\n    return (\n        <div className=\"card mb-3 bg-dark bg-gradient text-white bg-opacity-75\" >\n            <div className=\"row g-0\">\n                <div className=\"col-md-3\">\n                    <img src={`https://image.tmdb.org/t/p/w300/${url}`} className=\"img-fluid rounded-start pt-3 pb-3 ps-3 pe-4\" alt={title} width=\"250\" />\n                </div>\n                <div className=\"col-md-8 mb-3\">\n                    <div className=\"card-body\">\n                        <h3 className=\"card-title mt-2 mb-2\">{title}</h3>\n                        <p className=\"card-text text-warning mb-4\">Rating: {rating()}</p>\n                        <p className=\"card-text\">{overview}</p>\n                        <p className=\"card-text\"><small className=\"text-wgite\">Release date: <span className=\"ms-1\">{release_date}</span></small></p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nTrendCard.propTypes = {\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string,\n    overview: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n}\n\nexport default TrendCard;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { filmTrends } from \"redux/movies-selectors\";\nimport styles from './TrendList.module.scss';\nimport TrendCard from \"components/TrendCard/TrendCard\";\n\nexport default function TrendList() {\n    const trends = useSelector(filmTrends);\n\n    return (\n        <>\n            {trends && <motion.ul\n                variants={{\n                    hidden: { opacity: 0, y: 40 },\n                    visible: { opacity: 1, y: 0, transition: { duration: 0.5 } }\n                }}\n                className=\"mt-5 ps-0\">\n                {trends.map(({ id, title, poster_path, overview, release_date, vote_average }) => (\n                    <li key={id} className={styles.TerndsListItem}>\n                        <Link className='link-underline-light link-body-emphasis  text-white link-underline-opacity-0'\n                            to={`/movie-search-app/movies/${id}`}>\n                            <TrendCard title={title} url={poster_path} id={id} overview={overview} release_date={release_date} vote_average={vote_average} />\n\n                        </Link>\n\n                    </li>\n                ))}\n            </motion.ul>}\n        </>\n    )\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"BackBtnDiv\":\"TrandsPage_BackBtnDiv__EsldJ\"};","\nimport React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { motion } from \"framer-motion\";\nimport { currentTrends } from \"redux/movies-operations\";\nimport TrendsList from '../../components/TrendsList/TrendsList';\nimport BackButton from '../../components/BackButton/BackButton';\nimport styles from './TrandsPage.module.scss'\n\nexport default function TrendsPage() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(currentTrends())\n    }, [dispatch])\n\n\n    return (\n        <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit={{ opacity: 0, transition: { duration: 0.5 } }}\n            className=\"container\">\n            <div className={styles.BackBtnDiv}>\n                <BackButton />\n            </div>\n            <TrendsList />/\n        </motion.div>\n    )\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"button-perspective\":\"BackButton_button-perspective__s+wLS\"};","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport styles from './BackButton.module.scss';\n\nexport default function BackButton({ title = 'Go back', link }) {\n    const navigate = useNavigate();\n\n    const goHome = () => {\n        if (link) {\n            navigate(link)\n        } else {\n            navigate(-1)\n        }\n\n    }\n    return (\n        <button type=\"button\"\n            onClick={goHome}\n            className={styles['button-perspective']}>{title}</button>\n\n    )\n}\n\nBackButton.propTypes = {\n    title: PropTypes.string,\n    link: PropTypes.string,\n}\n","import axios from \"axios\";\n\nconst API_KEY = '8e127f53ae927fc22bd7f3abb16229a0';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZTEyN2Y1M2FlOTI3ZmMyMmJkN2YzYWJiMTYyMjlhMCIsInN1YiI6IjY0NWJmYjBlMTU2Y2M3MDExZTAxYjQ3NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IS4ys1KMSa1SyeQ79-hzJTYaGcyl7jb10Lui4h4xIuA';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\naxios.defaults.headers.common = {\n    Authorization: `Bearer ${TOKEN}`,\n    // accept: 'application/json',\n}\naxios.defaults.params = {\n    api_key: API_KEY,\n};\n\nexport const fetchMovies = ({ query, page = 1 }) => {\n    return axios.get(`/search/movie`, { params: { query: query, page: page } }).then(response => response.data.results);\n}\n\nexport const fetchMovieDetail = (id) => {\n    return axios.get(`/movie/${id}`).then(response => response.data);\n}\n\nexport const fetchTrends = () => {\n    return axios.get('/trending/movie/week').then(response => response.data.results);\n}\n\nexport const fetchCast = (id) => {\n    return axios.get(`/movie/${id}/credits`).then(response => response.data.cast);\n\n}\n\nexport const fetchReviews = (id) => {\n    return axios.get(`/movie/${id}/reviews`).then(response => response.data.results);\n}\n","import {\n    fetchMovies,\n    fetchMovieDetail,\n    fetchTrends,\n    fetchCast,\n    fetchReviews\n} from '../services/api';\n\nimport {\n    fetchMoviesRequest,\n    fetchMoviesSuccess,\n    fetchMoviesError,\n    fetchMovieDetailsRequest,\n    fetchMovieDetailsSuccess,\n    fetchMovieDetailsError,\n    fetchCurrentTrendsRequest,\n    fetchCurrentTrendsSuccess,\n    fetchCurrentTrendsError,\n    fetchCastRequest,\n    fetchCastSuccess,\n    fetchCastError,\n    fetchReviewsRequest,\n    fetchReviewsSuccess,\n    fetchReviewsError,\n} from './movies-actions';\n\nexport const searchMovies = (value, append) => async dispatch => {\n    dispatch(fetchMoviesRequest());\n    try {\n        const movies = await fetchMovies(value);\n        return dispatch(fetchMoviesSuccess(movies, append));\n    } catch (error) {\n        return dispatch(fetchMoviesError(error.message));\n    }\n}\n\nexport const searchMovieDetails = (id) => async dispatch => {\n    dispatch(fetchMovieDetailsRequest());\n\n    try {\n        const movieDetails = await fetchMovieDetail(id);\n        return dispatch(fetchMovieDetailsSuccess(movieDetails))\n    } catch (error) {\n        return dispatch(fetchMovieDetailsError(error.message))\n    }\n}\n\nexport const currentTrends = () => async dispatch => {\n    dispatch(fetchCurrentTrendsRequest());\n\n    try {\n        const trends = await fetchTrends();\n        return dispatch(fetchCurrentTrendsSuccess(trends));\n    } catch (error) {\n        return dispatch(fetchCurrentTrendsError(error.message))\n    }\n}\n\nexport const searchCast = (id) => async dispatch => {\n    dispatch(fetchCastRequest());\n\n    try {\n        const cast = await fetchCast(id);\n        return dispatch(fetchCastSuccess(cast));\n    } catch (error) {\n        return dispatch(fetchCastError(error.message));\n    }\n}\n\nexport const searchReviews = (id) => async dispatch => {\n    dispatch(fetchReviewsRequest());\n\n    try {\n        const cast = await fetchReviews(id);\n        return dispatch(fetchReviewsSuccess(cast));\n    } catch (error) {\n        return dispatch(fetchReviewsError(error.message));\n    }\n}","export const allSearchMovies = state => state.movies.movies;\nexport const moviesDetails = state => state.movies.movieDetails;\nexport const filmTrends = state => state.movies.trends;\nexport const filmCast = state => state.movies.cast;\nexport const filmReviews = state => state.movies.reviews;\n\n\n\n"],"names":["title","url","overview","release_date","vote_average","className","src","alt","width","toFixed","TrendList","trends","useSelector","filmTrends","motion","variants","hidden","opacity","y","visible","transition","duration","map","id","poster_path","styles","to","TrendsPage","dispatch","useDispatch","useEffect","currentTrends","initial","animate","exit","BackButton","link","navigate","useNavigate","type","onClick","axios","Authorization","api_key","fetchMovies","query","page","params","then","response","data","results","fetchMovieDetail","fetchCast","cast","fetchReviews","searchMovies","value","append","fetchMoviesRequest","movies","fetchMoviesSuccess","fetchMoviesError","message","searchMovieDetails","fetchMovieDetailsRequest","movieDetails","fetchMovieDetailsSuccess","fetchMovieDetailsError","fetchCurrentTrendsRequest","fetchCurrentTrendsSuccess","fetchCurrentTrendsError","searchCast","fetchCastRequest","fetchCastSuccess","fetchCastError","searchReviews","fetchReviewsRequest","fetchReviewsSuccess","fetchReviewsError","allSearchMovies","state","moviesDetails","filmCast","filmReviews","reviews"],"sourceRoot":""}