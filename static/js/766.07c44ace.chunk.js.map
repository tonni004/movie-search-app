{"version":3,"file":"static/js/766.07c44ace.chunk.js","mappings":"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","sources":["webpack://movie-search-app/./src/Pages/FilmPage/FilmPage.module.scss?73c6","components/GenresDiv/GenresDiv.js","components/CounrtiesProducrionDiv/CountriesProductionDiv.js","components/FilmDetails/FilmDetails.js","Pages/FilmPage/FilmPage.js","webpack://movie-search-app/./src/components/BackButton/BackButton.module.scss?ddd2","components/BackButton/BackButton.js","services/api.js","redux/movies-operations.js","redux/movies-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"BtnDiv\":\"FilmPage_BtnDiv__BupxQ\",\"Field\":\"FilmPage_Field__Z99mt\",\"InformationField\":\"FilmPage_InformationField__58-97\",\"Span\":\"FilmPage_Span__y4XK6\",\"BtnField\":\"FilmPage_BtnField__L2qCQ\",\"glowing-btn\":\"FilmPage_glowing-btn__k1n6f\",\"border-flicker\":\"FilmPage_border-flicker__t24rN\",\"glowing-txt\":\"FilmPage_glowing-txt__zFgM1\",\"text-flicker\":\"FilmPage_text-flicker__xBaVz\",\"faulty-letter\":\"FilmPage_faulty-letter__PRFor\",\"faulty-flicker\":\"FilmPage_faulty-flicker__zJWz8\",\"SeeMoreField\":\"FilmPage_SeeMoreField__yuwaL\",\"SeeMoreTitle\":\"FilmPage_SeeMoreTitle__jOkz5\",\"BtnGroup\":\"FilmPage_BtnGroup__E508t\",\"SeeMoreBtn\":\"FilmPage_SeeMoreBtn__sPfR9\"};","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport styles from '../../Pages/FilmPage/FilmPage.module.scss'\n\nconst GenresDiv = ({ genres }) => {\n    return (\n        genres.map(({ name, id }) => {\n            return <span className={styles.Span} key={id}>{name}</span>\n        })\n    )\n\n}\n\nGenresDiv.propTypes = {\n    genres: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n    })),\n}\n\nexport default GenresDiv;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport styles from '../../Pages/FilmPage/FilmPage.module.scss'\n\nconst ContriesProductionDiv = ({ countries }) => {\n    return (\n        countries.map(({ name }) => {\n            return <span className={styles.Span} key={name}>{name}</span>\n        })\n    )\n\n}\n\nContriesProductionDiv.propTypes = {\n    countries: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n    }))\n}\n\nexport default ContriesProductionDiv;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { motion } from \"framer-motion\";\nimport { moviesDetails } from \"redux/movies-selectors\";\nimport styles from '../../Pages/FilmPage/FilmPage.module.scss'\n\n// components\nimport GenresDiv from \"../../components/GenresDiv/GenresDiv\";\nimport ContriesProductionDiv from '../../components/CounrtiesProducrionDiv/CountriesProductionDiv';\n\nexport default function FilmDetails() {\n    const movie = useSelector(moviesDetails);\n    return (\n        <>\n            <motion.div\n                variants={{\n                    hidden: { opacity: 0 },\n                    visible: { opacity: 1, transition: { duration: 0.3 } }\n                }}\n                className={styles.Field}>\n                <img src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`} alt={movie.title} width=\"370\" />\n                <div className={styles.InformationField}>\n                    <div>\n                        <h2 className=\"mb-0\">{movie.title}</h2>\n                        <div className=\"mt-4 text-white-50\">\n                            <GenresDiv genres={movie.genres} />\n                            <span className={styles.Span} >{movie.runtime} min</span>\n                            <span className={styles.Span} >{movie.vote_average} rating</span>\n                        </div>\n\n                        <div className=\"mt-1 \">\n                            <ContriesProductionDiv countries={movie.production_countries} />\n                            <span className={styles.Span} >{movie.release_date}</span>\n                        </div>\n\n                        <p className=\"mt-5 mb-5\">{movie.overview}</p>\n                    </div>\n\n\n\n                    <div className={styles.BtnField}>\n                        <button className={styles['glowing-btn']} type=\"button\">\n                            <a href={movie.homepage}>\n                                <span className={styles['glowing-txt']}>W<span className={styles['faulty-letter']}>A</span>TCH</span>\n                            </a>\n                        </button>\n                    </div >\n\n                </div >\n            </motion.div >\n        </>\n\n\n    )\n}\n\n","import { useEffect, useState, useCallback, Suspense, lazy } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useNavigate, useRoutes } from \"react-router-dom\";\nimport { motion } from \"framer-motion\";\nimport { searchMovieDetails } from \"redux/movies-operations\";\nimport { searchCast, searchReviews } from \"redux/movies-operations\";\nimport { moviesDetails } from \"redux/movies-selectors\";\n\n// components\nimport FilmDetails from \"components/FilmDetails\";\nimport SpinnerCircle from '../../components/Spinner/Spinner';\nimport BackButton from \"components/BackButton/BackButton\";\nimport styles from './FilmPage.module.scss';\n\n\n// lazy routes\nconst Cast = lazy(() => import('../../components/Cast'));\nconst Reviews = lazy(() => import('../../components/Reviews/Reviews'));\n\n\nexport default function FilmPage() {\n    const dispatch = useDispatch();\n    const movieDetails = useSelector(moviesDetails);\n    const movieParams = useParams();\n    const navigate = useNavigate();\n    const [dataLoaded, setDataLoaded] = useState(false);\n\n    const onFetchCast = useCallback(() => {\n        dispatch(searchCast(movieParams.moviesId));\n        navigate(`cast`, { replace: true });\n    }, [dispatch, movieParams, navigate]);\n\n    const onFetchReviews = useCallback(() => {\n        dispatch(searchReviews(movieParams.moviesId));\n        navigate(`reviews`, { replace: true });\n    }, [dispatch, movieParams, navigate]);\n\n    const element = useRoutes([\n        {\n            path: `cast`,\n            element: < Cast />,\n        },\n        {\n            path: `reviews`,\n            element: <Reviews />,\n        },\n    ]);\n\n    useEffect(() => {\n        dispatch(searchMovieDetails(movieParams.moviesId)).then(() => {\n            setDataLoaded(true);\n        });\n    }, [dispatch, movieParams]);\n\n    return (\n        <motion.div\n            initial=\"hidden\"\n            animate=\"visible\"\n            className=\"container text-white bg-opacity-75 bg-black mt-4 mb-4\">\n            <div className={styles.BtnDiv}>\n                <BackButton />\n            </div>\n\n            {dataLoaded ? (\n                <FilmDetails\n                    title={movieDetails.title}\n                    overview={movieDetails.overview}\n                    poster_path={movieDetails.poster_path}\n                    genres={movieDetails.genres}\n                    release_date={movieDetails.release_date}\n                    runtime={movieDetails.runtime}\n                    production_countries={movieDetails.production_countries}\n                    vote_average={movieDetails.vote_average}\n                    homepage={movieDetails.homepage}\n                />\n            ) : (\n                <SpinnerCircle />\n            )}\n\n            <div className={styles.SeeMoreField}>\n                <h4 className={styles.SeeMoreTitle}>See more: </h4>\n                <ul className={styles.BtnGroup}>\n                    <li className={styles.SeeMoreBtn}>\n                        <button type=\"button\" onClick={onFetchCast} className='btn btn-outline-info'>\n                            Cast\n                        </button>\n                    </li>\n                    <li>\n                        <button type=\"button\" onClick={onFetchReviews} className='btn btn-outline-info'>\n                            Reviews\n                        </button>\n                    </li>\n                </ul>\n            </div>\n\n            <Suspense fallback={<SpinnerCircle />}>\n                {element}\n            </Suspense>\n        </motion.div>\n    );\n}\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"button-perspective\":\"BackButton_button-perspective__s+wLS\"};","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport styles from './BackButton.module.scss';\n\nexport default function BackButton({ title = 'Go back', link }) {\n    const navigate = useNavigate();\n\n    const goHome = () => {\n        if (link) {\n            navigate(link)\n        } else {\n            navigate(-1)\n        }\n\n    }\n    return (\n        <button type=\"button\"\n            onClick={goHome}\n            className={styles['button-perspective']}>{title}</button>\n\n    )\n}\n\nBackButton.propTypes = {\n    title: PropTypes.string,\n    link: PropTypes.string,\n}\n","import axios from \"axios\";\n\nconst API_KEY = '8e127f53ae927fc22bd7f3abb16229a0';\nconst TOKEN = 'eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZTEyN2Y1M2FlOTI3ZmMyMmJkN2YzYWJiMTYyMjlhMCIsInN1YiI6IjY0NWJmYjBlMTU2Y2M3MDExZTAxYjQ3NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.IS4ys1KMSa1SyeQ79-hzJTYaGcyl7jb10Lui4h4xIuA';\n\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3'\naxios.defaults.headers.common = {\n    Authorization: `Bearer ${TOKEN}`,\n    // accept: 'application/json',\n}\naxios.defaults.params = {\n    api_key: API_KEY,\n};\n\nexport const fetchMovies = ({ query, page = 1 }) => {\n    return axios.get(`/search/movie`, { params: { query: query, page: page } }).then(response => response.data.results);\n}\n\nexport const fetchMovieDetail = (id) => {\n    return axios.get(`/movie/${id}`).then(response => response.data);\n}\n\nexport const fetchTrends = () => {\n    return axios.get('/trending/movie/week').then(response => response.data.results);\n}\n\nexport const fetchCast = (id) => {\n    return axios.get(`/movie/${id}/credits`).then(response => response.data.cast);\n\n}\n\nexport const fetchReviews = (id) => {\n    return axios.get(`/movie/${id}/reviews`).then(response => response.data.results);\n}\n","import {\n    fetchMovies,\n    fetchMovieDetail,\n    fetchTrends,\n    fetchCast,\n    fetchReviews\n} from '../services/api';\n\nimport {\n    fetchMoviesRequest,\n    fetchMoviesSuccess,\n    fetchMoviesError,\n    fetchMovieDetailsRequest,\n    fetchMovieDetailsSuccess,\n    fetchMovieDetailsError,\n    fetchCurrentTrendsRequest,\n    fetchCurrentTrendsSuccess,\n    fetchCurrentTrendsError,\n    fetchCastRequest,\n    fetchCastSuccess,\n    fetchCastError,\n    fetchReviewsRequest,\n    fetchReviewsSuccess,\n    fetchReviewsError,\n} from './movies-actions';\n\nexport const searchMovies = (value, append) => async dispatch => {\n    dispatch(fetchMoviesRequest());\n    try {\n        const movies = await fetchMovies(value);\n        return dispatch(fetchMoviesSuccess(movies, append));\n    } catch (error) {\n        return dispatch(fetchMoviesError(error.message));\n    }\n}\n\nexport const searchMovieDetails = (id) => async dispatch => {\n    dispatch(fetchMovieDetailsRequest());\n\n    try {\n        const movieDetails = await fetchMovieDetail(id);\n        return dispatch(fetchMovieDetailsSuccess(movieDetails))\n    } catch (error) {\n        return dispatch(fetchMovieDetailsError(error.message))\n    }\n}\n\nexport const currentTrends = () => async dispatch => {\n    dispatch(fetchCurrentTrendsRequest());\n\n    try {\n        const trends = await fetchTrends();\n        return dispatch(fetchCurrentTrendsSuccess(trends));\n    } catch (error) {\n        return dispatch(fetchCurrentTrendsError(error.message))\n    }\n}\n\nexport const searchCast = (id) => async dispatch => {\n    dispatch(fetchCastRequest());\n\n    try {\n        const cast = await fetchCast(id);\n        return dispatch(fetchCastSuccess(cast));\n    } catch (error) {\n        return dispatch(fetchCastError(error.message));\n    }\n}\n\nexport const searchReviews = (id) => async dispatch => {\n    dispatch(fetchReviewsRequest());\n\n    try {\n        const cast = await fetchReviews(id);\n        return dispatch(fetchReviewsSuccess(cast));\n    } catch (error) {\n        return dispatch(fetchReviewsError(error.message));\n    }\n}","export const allSearchMovies = state => state.movies.movies;\nexport const moviesDetails = state => state.movies.movieDetails;\nexport const filmTrends = state => state.movies.trends;\nexport const filmCast = state => state.movies.cast;\nexport const filmReviews = state => state.movies.reviews;\n\n\n\n"],"names":["genres","map","name","id","className","styles","countries","FilmDetails","movie","useSelector","moviesDetails","motion","variants","hidden","opacity","visible","transition","duration","src","poster_path","alt","title","width","runtime","vote_average","production_countries","release_date","overview","type","href","homepage","Cast","lazy","Reviews","FilmPage","dispatch","useDispatch","movieDetails","movieParams","useParams","navigate","useNavigate","useState","dataLoaded","setDataLoaded","onFetchCast","useCallback","searchCast","moviesId","replace","onFetchReviews","searchReviews","element","useRoutes","path","useEffect","searchMovieDetails","then","initial","animate","BackButton","Spinner","onClick","Suspense","fallback","link","axios","Authorization","api_key","fetchMovies","query","page","params","response","data","results","fetchMovieDetail","fetchCast","cast","fetchReviews","searchMovies","value","append","fetchMoviesRequest","movies","fetchMoviesSuccess","fetchMoviesError","message","fetchMovieDetailsRequest","fetchMovieDetailsSuccess","fetchMovieDetailsError","currentTrends","fetchCurrentTrendsRequest","trends","fetchCurrentTrendsSuccess","fetchCurrentTrendsError","fetchCastRequest","fetchCastSuccess","fetchCastError","fetchReviewsRequest","fetchReviewsSuccess","fetchReviewsError","allSearchMovies","state","filmTrends","filmCast","filmReviews","reviews"],"sourceRoot":""}